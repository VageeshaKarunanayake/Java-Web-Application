/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.30
 * Generated at: 2018-06-11 17:48:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import Database.chatFunction;
import java.util.*;

public final class chat_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/Header.jsp", Long.valueOf(1528739018681L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("Database.chatFunction");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
ArrayList<String> msgs = chatFunction.getMsg((String)session.getAttribute("LogDetails"));
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"Header/HeaderStyle_h.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<ul id=\"menu_wrap\" class=\"Vista_Black\"><li class=\"button\"><a href=\"Home.jsp\">Home</a></li><li class=\"button\"><a href=\"ImagesWeb.jsp\">Wall</a></li><li class=\"button\"><a href=\"index.jsp\">Friends</a></li><li class=\"button\"><a href=\"chat.jsp\">Message</a></li><li class=\"button\"><a href=\"PostWeb.jsp\">Posts</a></li><li class=\"button\"><a href=\"SearchWeb.jsp\">Search</a></li><li class=\"button\" style=\"float:right\"><a href=\"FirstWeb.jsp\">");
      out.print((String)session.getAttribute("LogDetails"));
      out.write("(Logout)</a></li> </ul>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Message</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/bootstrap/css/bootstrap.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/css/chatpage.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/css/Pretty-User-List.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/css/user_main.css\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body id=\"chat-body\">\r\n");
      out.write("<form action=\"send.jsp\" method=\"post\">\r\n");
      out.write("    <div class=\"jumbotron\" id=\"chat-jumb\" style=\"width:80%;text-align:center;margin-left:10%;margin-top:3%;\">\r\n");
      out.write("        <h1>Messages</h1><textarea disabled id=\"chat-old\" style=\"width:80%;height:30%\">");
 
for(String m : msgs)
{
      out.write('\r');
      out.write('\n');
      out.write(' ');
      out.print( m );

}
      out.write("</textarea>\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        <div class=\"dropdown\"  style=\"margin-top:2%\">\r\n");
      out.write("        <select id=\"receiver\" name=\"receiver\">\r\n");
      out.write("        \t");
 ArrayList<String> list = chatFunction.getUsers();
        	for(String un : list)
        	{	
        	
      out.write("\r\n");
      out.write("  \t\t\t<option value=\"");
      out.print(un );
      out.write('"');
      out.write('>');
      out.print(un );
      out.write("</option>\r\n");
      out.write("  \t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t</select>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        <input type=\"text\" id=\"chat-new\" name=\"chat-new\"placeholder=\"New Message\" style=\"margin-top:2%\">\r\n");
      out.write("        <p><input class=\"btn btn-primary\" role=\"button\" type=\"submit\" value=\"SEND\" id=\"chat-send\" style=\"margin-top:2%\"></input></p>\r\n");
      out.write("        <input type=text id=\"sender\" style=\"display:none;visibility:hidden\" name=\"sender\" value=");
      out.print((String)session.getAttribute("LogDetails"));
      out.write(">\r\n");
      out.write("        \r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <script src=\"assets/js/jquery.min.js\"></script>\r\n");
      out.write("    <script src=\"assets/bootstrap/js/bootstrap.min.js\"></script>\r\n");
      out.write("    </form>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
